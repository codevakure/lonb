# Environment Configuration Template
# Copy this file to .env and modify values for your environment
# Different environments use different combinations of these variables

# =============================================================================
# REQUIRED ENVIRONMENT VARIABLES (Must be set for the application to work)
# =============================================================================

# Environment Type - Controls application behavior and security settings
ENV=development                         # Options: development, staging, production

# AWS Region - Required for all AWS services
AWS_REGION=us-east-1                   # AWS region where your services are deployed

# S3 Storage - Required for document storage
S3_BUCKET=your-loan-documents-bucket   # S3 bucket name for storing loan documents

# DynamoDB Tables - Required for data persistence
LOAN_BOOKING_TABLE_NAME=your-loan-bookings-table     # Table for loan booking metadata
BOOKING_SHEET_TABLE_NAME=your-boarding-sheet-table   # Table for boarding sheet data

# Bedrock AI Services - Required for AI-powered features
KNOWLEDGE_BASE_ID=your-knowledge-base-id             # Bedrock Knowledge Base ID
DATA_SOURCE_ID=your-data-source-id                   # Knowledge Base data source ID

# =============================================================================
# AWS AUTHENTICATION (Choose ONE method based on your deployment)
# =============================================================================

# Method 1: Environment Variables (Recommended for containers/production)
# Uncomment and set these for explicit AWS credentials
# AWS_ACCESS_KEY_ID=your-access-key-id
# AWS_SECRET_ACCESS_KEY=your-secret-access-key

# Method 2: AWS CLI Profile (Recommended for local development)
# First run: aws configure --profile your-profile-name
# Then uncomment the line below:
# AWS_PROFILE=your-profile-name

# Method 3: IAM Roles (Automatic in EC2/ECS/Lambda - no variables needed)
# When running on AWS services, credentials are automatically provided

# Method 4: Test Credentials (Development with mocked AWS only)
# Uncomment these only when USE_MOCK_AWS=true
# AWS_ACCESS_KEY_ID=test
# AWS_SECRET_ACCESS_KEY=test

# =============================================================================
# OPTIONAL CONFIGURATION (Has sensible defaults - uncomment only if needed)
# =============================================================================

# Application Settings
# DEBUG=false                           # Enable debug mode (auto-set based on ENV)
# LOG_LEVEL=INFO                        # Logging level: DEBUG, INFO, WARNING, ERROR
# API_HOST=0.0.0.0                      # Server bind address
# API_PORT=8000                         # Server port
# API_WORKERS=1                         # Uvicorn workers (increase for production)

# S3 Configuration
# S3_PREFIX=loan-documents/             # S3 key prefix for file organization

# AI Model Configuration (Uses cost-effective defaults)
# MODEL_ID=anthropic.claude-3-haiku-20240307-v1:0              # Primary AI model
# GENERATION_MODEL_ID=anthropic.claude-3-5-sonnet-20240620-v1:0  # Generation model

# Production-Only Settings (Only uncomment in production)
# BEDROCK_AGENT_ROLE_ARN=arn:aws:iam::account:role/bedrock-execution-role
# GUARDRAIL_ID=your-guardrail-id        # Bedrock content filtering guardrail

# CORS Configuration (Auto-configured based on ENV - only override if needed)
# ALLOWED_ORIGINS=https://yourdomain.com  # Comma-separated list of allowed origins
# ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS
# ALLOWED_HEADERS=Content-Type,Authorization,X-Requested-With
# ALLOW_CREDENTIALS=false

# Development/Testing Settings (Only use in development)
# USE_MOCK_AWS=false                    # Set to 'true' to use mocked AWS services
# SKIP_AWS_VALIDATION=false             # Set to 'true' to skip AWS connectivity checks
